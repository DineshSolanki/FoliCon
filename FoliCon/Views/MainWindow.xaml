<Window x:Class="FoliCon.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:modules="clr-namespace:FoliCon.Modules"
        xmlns:viewModels="clr-namespace:FoliCon.ViewModels"
        xmlns:langs="clr-namespace:FoliCon.Properties.Langs"
        xmlns:ex="clr-namespace:FoliCon.Modules.LangExtension"
        xmlns:models="clr-namespace:FoliCon.Models"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Title="{Binding Title}" Height="714" Width="752" MinWidth="752" MinHeight="608"
        WindowStartupLocation="CenterScreen" hc:WindowAttach.IsDragElement="True"
           Icon="/Resources/folicon Icon.ico"
        modules:FolderDragDropHelper.IsFileDragDropEnabled="True"
        modules:FolderDragDropHelper.FileDragDropTarget="{Binding}" AllowDrop="True"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}">
    
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </Window.Resources>
   
    <hc:BusyIndicator IsBusy="{Binding IsBusy}">
        <hc:BusyIndicator.BusyContentTemplate>
            <DataTemplate>
                <StackPanel Margin="4">
                    <TextBlock Text="{ex:Lang Key={x:Static langs:LangKeys.DownloadingIcons}}" FontWeight="Bold" HorizontalAlignment="Center" />
                    <StackPanel Margin="4">
                        <TextBlock
                            Text="{Binding Path=DataContext.BusyIndicatorProperties.Text, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
                        <ProgressBar Style="{DynamicResource ProgressBarFlat}"
                                     Value="{Binding Path=DataContext.BusyIndicatorProperties.Value, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                     Maximum="{Binding Path=DataContext.BusyIndicatorProperties.Max, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                     Height="15" />
                    </StackPanel>
                    <Grid>
                        <Button Content="{x:Static hc:Lang.Cancel}" HorizontalAlignment="Center" Margin="2 0 0 0"
                                Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                        AncestorType={x:Type Window}}, Path=DataContext.DownloadCancelCommand}" />
                    </Grid>
                </StackPanel>
            </DataTemplate>
        </hc:BusyIndicator.BusyContentTemplate>
        <hc:BusyIndicator.ProgressBarStyle>
            <Style TargetType="ProgressBar">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>
        </hc:BusyIndicator.ProgressBarStyle>
        <Grid>
            <Menu IsMainMenu="True" Grid.Row="0">
                <MenuItem Header="Settings">
                    <MenuItem x:Name="ChkIsRatingVisible" Header="{ex:Lang Key={x:Static langs:LangKeys.ShowRatingBadge}}"
                              IsChecked="{Binding IsRatingVisible}" IsCheckable="True"
                              ToolTip="{ex:Lang Key={x:Static langs:LangKeys.ShowRatingBadgeTooltip}}" />
                    <MenuItem x:Name="ChkPosterShown" Header="{ex:Lang Key={x:Static langs:LangKeys.AlwaysShowPosterWindow}}"
                              IsChecked="{Binding IsPosterWindowShown}" IsCheckable="True"
                              ToolTip="{ex:Lang Key={x:Static langs:LangKeys.ShowPosterWindowTooltip}}" />
                    <MenuItem x:Name="ChkIsPosterOverlayVisible" Header="{ex:Lang Key={x:Static langs:LangKeys.UsePosterOverlay}}"
                              IsChecked="{Binding IsPosterMockupUsed}" IsCheckable="True"
                              ToolTip="{ex:Lang Key={x:Static langs:LangKeys.PosterOverlayTooltip}}" />
                    <MenuItem x:Name="ChkIgnoreAmbiguous" Header="{ex:Lang Key={x:Static langs:LangKeys.IgnoreAmbiguousTitle}}" IsCheckable="True"
                              IsChecked="{Binding IsSkipAmbiguous}" IsEnabled="{Binding IsSkipAmbiguousEnabled}"
                              ToolTip="{ex:Lang Key={x:Static langs:LangKeys.AmbiguousTitleTooltip}}" />
                    <Separator />
                    <MenuItem x:Name="MenuPosterIconConfigBtn" Header="{ex:Lang Key={x:Static langs:LangKeys.ChangePosterOverlay}}"
                              Command="{Binding PosterIconConfigCommand}" />
                    <MenuItem x:Name="MenuApiConfigBtn" Header="{ex:Lang Key={x:Static langs:LangKeys.APIKeysConfiguration}}"
                              Command="{Binding ApiConfigCommand}" />
                    <Separator />
                    <hc:ComboBox x:Name="CmbLanguage" AutoComplete="True" ItemsSource="{Binding Source={hc:EnumBindingSource {x:Type models:Languages}}}" IsEditable="False" hc:Poptip.Content="Change Language" SelectedIndex="0" SelectionChanged="CmbLanguage_OnSelectionChanged"/>
                </MenuItem>
                <MenuItem x:Name="MenuRExbtn" Header="{ex:Lang Key={x:Static langs:LangKeys.RestartExplorer}}"
                          ToolTip="{ex:Lang Key={x:Static langs:LangKeys.RestartExplorerTooltip}}"
                          Command="{Binding RestartExCommand}" />
                <MenuItem x:Name="MenuDeleteIconsbtn" Header="{ex:Lang Key={x:Static langs:LangKeys.DeleteIcons}}"
                          ToolTip="{ex:Lang Key={x:Static langs:LangKeys.DeleteIconsTooltip}}"
                          Command="{Binding DeleteIconsCommand}" />
                <MenuItem x:Name="MenuCustomIconsbtn" Header="{ex:Lang Key={x:Static langs:LangKeys.HaveIcons}}"
                          ToolTip="{ex:Lang Key={x:Static langs:LangKeys.HaveIconsTooltip}}"
                          Command="{Binding CustomIconsCommand}" />
                <MenuItem Header="Help">
                    <MenuItem x:Name="MenubtnHelp" Header="{ex:Lang Key={x:Static langs:LangKeys.HelpDocument}}" Command="{Binding HelpCommand}" />
                    <MenuItem Header="{ex:Lang Key={x:Static langs:LangKeys.CheckForUpdate}}" Command="{Binding UpdateCommand}" />
                    <MenuItem Header="{ex:Lang Key={x:Static langs:LangKeys.About}}" Command="{Binding AboutCommand}" />
                </MenuItem>
            </Menu>
            <Grid Margin="0,0,0,1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="314*" />
                    <ColumnDefinition Width="227*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="25" />
                    <RowDefinition Height="30" />
                    <RowDefinition Height="160*" />
                    <RowDefinition Height="291*" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <ContentControl Grid.Row="1" HorizontalAlignment="Center" Grid.ColumnSpan="2" VerticalAlignment="Top">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding SelectedFolderDClickCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TextBlock Text="{Binding SelectedFolder}" HorizontalAlignment="Center" VerticalAlignment="Top"
                               FontStyle="Italic" Foreground="Black"/>
                </ContentControl>

                <Grid Grid.Column="0" Grid.Row="2" Grid.IsSharedSizeScope="True" Background="WhiteSmoke">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="96" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <GroupBox hc:TitleElement.TitlePlacement="Top" Grid.Row="0" Header="{ex:Lang Key={x:Static langs:LangKeys.IconMode}}"
                              Style="{StaticResource GroupBoxTab}" FontSize="18" FontFamily="Cambria"
                              hc:TitleElement.Background="WhiteSmoke" Foreground="BlueViolet" BorderThickness="0"
                              Background="WhiteSmoke">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition SharedSizeGroup="second" />
                            </Grid.ColumnDefinitions>

                            <RadioButton x:Name="RPoster" Content="{ex:Lang Key={x:Static langs:LangKeys.Poster}}" Grid.Column="0"
                                         Command="{Binding IconModeChangedCommand}"
                                         CommandParameter="{Binding ElementName=RPoster, Path=Content}"
                                         Margin="0,4,0,4" FontSize="16" VerticalAlignment="Stretch"
                                         HorizontalAlignment="Left" IsChecked="True" />
                            <RadioButton x:Name="RProf" Content="{ex:Lang Key={x:Static langs:LangKeys.Professional}}" Grid.Column="2"
                                         Command="{Binding IconModeChangedCommand}"
                                         CommandParameter="{Binding ElementName=RProf, Path=Content}" FontSize="16"
                                         HorizontalAlignment="Left" VerticalAlignment="Stretch" />
                        </Grid>
                    </GroupBox>
                    <GroupBox
                        Visibility="{Binding IsSearchModeVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                        hc:TitleElement.TitlePlacement="Top" Header="{ex:Lang Key={x:Static langs:LangKeys.SearchMode}}" Style="{StaticResource GroupBoxTab}"
                        Grid.Row="1" Margin="0,1,0,0" FontFamily="Cambria" FontSize="18"
                        hc:TitleElement.Background="WhiteSmoke" Foreground="BlueViolet" BorderThickness="0"
                        Background="WhiteSmoke">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition SharedSizeGroup="second" Width="250" />
                            </Grid.ColumnDefinitions>
                            <RadioButton x:Name="RMovie" Content="{ex:Lang Key={x:Static langs:LangKeys.Movie}}" Command="{Binding SearchModeChangedCommand}"
                                         CommandParameter="{Binding ElementName=RMovie, Path=Content}" FontSize="16"
                                         Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" IsChecked="True" />
                            <RadioButton x:Name="RGame" Content="{ex:Lang Key={x:Static langs:LangKeys.Game}}" Command="{Binding SearchModeChangedCommand}"
                                         CommandParameter="{Binding ElementName=RGame, Path=Content}" FontSize="16"
                                         Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" />
                            <RadioButton x:Name="RTv" Content="{ex:Lang Key={x:Static langs:LangKeys.TV}}" Command="{Binding SearchModeChangedCommand}"
                                         CommandParameter="{Binding ElementName=RTv, Path=Content}" FontSize="16"
                                         Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left" />
                            <RadioButton x:Name="RAuto" Content="{ex:Lang Key={x:Static langs:LangKeys.Auto}}"
                                         Command="{Binding SearchModeChangedCommand}"
                                         CommandParameter="{Binding ElementName=RAuto, Path=Content}" FontSize="16"
                                         Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" />
                        </Grid>
                    </GroupBox>
                </Grid>
                <Grid Grid.Column="1" Background="WhiteSmoke" Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Button Content="{ex:Lang Key={x:Static langs:LangKeys.Load}}" Grid.Row="0" Command="{Binding LoadCommand}" HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom" Height="76" Margin="3,0,3,0" />
                    <Button Content="{ex:Lang Key={x:Static langs:LangKeys.MakeIcons}}" Grid.Row="1" IsEnabled="{Binding IsMakeEnabled}"
                            Command="{Binding SearchAndMakeCommand}" HorizontalAlignment="Stretch" Margin="3,0,3,0"
                            Height="76" />
                </Grid>
                <ListView x:Name="FinalList" Grid.Row="3" Grid.ColumnSpan="2" Grid.Column="0"
                          ItemsSource="{Binding FinalListViewData.Data}"
                          SelectedItem="{Binding FinalListViewData.SelectedItem}"
                          MouseDoubleClick="ListView_MouseDoubleClick" hc:Empty.ShowEmpty="true">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding ListViewDoubleClickCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="{ex:Lang Key={x:Static langs:LangKeys.Title}}" Width="Auto" DisplayMemberBinding="{Binding Title}" />
                            <GridViewColumn Header="{ex:Lang Key={x:Static langs:LangKeys.Year}}" Width="60" DisplayMemberBinding="{Binding Year}" />
                            <GridViewColumn Header="{ex:Lang Key={x:Static langs:LangKeys.Rating}}" Width="63" DisplayMemberBinding="{Binding Rating}" />
                            <GridViewColumn Header="{ex:Lang Key={x:Static langs:LangKeys.Folder}}" Width="Auto" DisplayMemberBinding="{Binding Folder}" />
                        </GridView>
                    </ListView.View>
                </ListView>
                <StatusBar Grid.Row="4" Grid.ColumnSpan="2" Grid.Column="0" DataContext="{Binding StatusBarProperties}">
                    <StatusBar.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="auto" />
                                    <!--separator-->
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                    <!--separator-->
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="auto" />
                                    <!--separator-->
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="auto" />
                                    <!--separator-->
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                            </Grid>
                        </ItemsPanelTemplate>
                    </StatusBar.ItemsPanel>
                    <StatusBarItem Grid.Column="0">
                        <Label Content="{Binding AppStatus}" BorderThickness="0" />
                    </StatusBarItem>
                    <Separator Grid.Column="1" />
                    <StatusBarItem Grid.Column="2" HorizontalContentAlignment="Stretch">
                        <ProgressBar Style="{DynamicResource ProgressBarFlat}" Value="{Binding ProgressBarData.Value}"
                                     Maximum="{Binding ProgressBarData.Max}" Height="17" />
                    </StatusBarItem>
                    <Separator Grid.Column="3" />
                    <StatusBarItem Grid.Column="4">
                        <Label Content="{ex:Lang Key={x:Static langs:LangKeys.FoldersProcessed}}" VerticalAlignment="Top" BorderThickness="0" />
                    </StatusBarItem>
                    <StatusBarItem Grid.Column="5">
                        <Label Content="{Binding ProcessedFolder}" VerticalAlignment="Top" />
                    </StatusBarItem>
                    <StatusBarItem Grid.Column="6">
                        <Label FontSize="12" Content="{ex:Lang Key={x:Static langs:LangKeys.OutOf}}" VerticalAlignment="Top" BorderThickness="0" />
                    </StatusBarItem>
                    <StatusBarItem Grid.Column="7">
                        <Label Content="{Binding TotalFolders}" VerticalAlignment="Top" />
                    </StatusBarItem>
                    <Separator Grid.Column="8" />
                    <StatusBarItem Grid.Column="9">
                        <Label Content="{ex:Lang Key={x:Static langs:LangKeys.IconsCreated}}" VerticalAlignment="Top" BorderThickness="0" />
                    </StatusBarItem>
                    <StatusBarItem Grid.Column="10">
                        <Label Content="{Binding ProcessedIcon}" />
                    </StatusBarItem>
                    <StatusBarItem Grid.Column="11">
                        <Label FontSize="12" Content="{ex:Lang Key={x:Static langs:LangKeys.OutOf}}" VerticalAlignment="Top" BorderThickness="0" />
                    </StatusBarItem>
                    <StatusBarItem Grid.Column="12">
                        <Label Content="{Binding TotalIcons}" VerticalAlignment="Top" />
                    </StatusBarItem>
                    <Separator Grid.Column="13" />
                    <StatusBarItem Grid.Column="14">
                        <Image Source="{Binding NetIcon}" Stretch="Fill" Width="32" />
                    </StatusBarItem>
                </StatusBar>
            </Grid>
        </Grid>
    </hc:BusyIndicator>
</Window>